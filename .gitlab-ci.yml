---
include:
  - local: '.gitlab-ci-pages.yml'
  - local: '.gitlab-ci-slides.yml'
  - project: tpo/tpa/ci-templates
    file: scripts/apt.yml

#
# Python
#

python:
  stage: build
  image: containers.torproject.org/tpo/tpa/base-images/debian:stable
  before_script:
    - !reference [.apt-init]
  script:
    - apt-get update
    - apt-get install -y git
    - git submodule sync
    - git submodule update --init --recursive --depth 1
    - scripts/provision-packaging-python
    - mkdir -p dist
    - make build-python-package
  artifacts:
    paths:
      - dist
  #only:
  #  - main

#
# Debian
#

.debian-package:
  - apt-get update
  - apt-get install -y git
  - git submodule sync
  - git submodule update --init --recursive --depth 1
  - scripts/provision-packaging-debian
  - make build-debian-test-package
  - mkdir -p dist
  - mv ../onionprobe_* dist

debian_stable:
  stage: build
  image: containers.torproject.org/tpo/tpa/base-images/debian:stable
  before_script:
    - !reference [.apt-init]
  script:
    - !reference [.debian-package]
  artifacts:
    paths:
      - dist
  #only:
  #  - main

debian_sid:
  stage: build
  image: containers.torproject.org/tpo/tpa/base-images/debian:sid
  before_script:
    - !reference [.apt-init]
  script:
    - !reference [.debian-package]
  artifacts:
    paths:
      - dist
  #only:
  #  - main

ubuntu_lts:
  stage: build
  image: containers.torproject.org/tpo/tpa/base-images/ubuntu:lts
  before_script:
    - !reference [.apt-init]
  script:
    - !reference [.debian-package]
  artifacts:
    paths:
      - dist
  #only:
  #  - main

lintian:
  image: containers.torproject.org/tpo/tpa/base-images/debian:sid
  stage: test
  needs:
    - job: debian_sid
      artifacts: true
  before_script:
    - !reference [.apt-init]
  script:
    - apt-get update
    - apt-get install -y lintian
    # Lintian debugging
    # https://gitlab.torproject.org/tpo/onion-services/onionprobe/-/issues/105
    #- touch /usr/share/lintian/test
    - df -h
    - apt-get install apt-utils findutils -y
    #- apt-get purge lintian -y
    #- DEBIAN_FRONTEND=noninteractive apt-get -o Debug::pkgDPkgProgressReporting=true -o Debug::pkgPackageManager=true -o Debug::pkgDPkgPM=true install lintian -y
    #- DEBIAN_FRONTEND=noninteractive apt-get -o Debug::pkgDPkgProgressReporting=true -o Debug::pkgPackageManager=true -o Debug::pkgDPkgPM=true download lintian -y
    #- ls -l /var/cache/apt/archives/lintian_*.deb
    #- DEBIAN_FRONTEND=noninteractive dpkg --debug=73663 -i /var/cache/apt/archives/lintian_*.deb
    #- DEBIAN_FRONTEND=noninteractive dpkg --debug=73663 -i lintian_*.deb
    #- DEBIAN_FRONTEND=noninteractive dpkg-reconfigure --terse lintian
    - echo -e "\e[0Ksection_start:`date +%s`:dpkg_lintian\r\e[0KChecking lintian installation through dpkg"
    - grep lintian /var/log/dpkg.log
    - dpkg -l lintian
    - dpkg -L lintian
    - echo -e "\e[0Ksection_end:`date +%s`:dpkg_lintian\r\e[0K"
    - echo -e "\e[0Ksection_start:`date +%s`:fs_lintian\r\e[0KChecking lintian installation through the filesystem"
    - ls /var/lib/dpkg/info/lintian.*
    - find /usr/share/doc/lintian
    - find /usr/share/lintian
    - ls -l /usr/bin/lintian
    - echo -e "\e[0Ksection_end:`date +%s`:fs_lintian\r\e[0K"
    #- ls -l /usr/share/lintian
    #- ls -l /usr/share/lintian/bin
    - lintian --allow-root -v --pedantic dist/onionprobe_*.deb
  #only:
  #  - main

# Currently broken
# https://gitlab.torproject.org/tpo/onion-services/onionprobe/-/issues/87
piuparts:
  image: containers.torproject.org/tpo/tpa/base-images/debian:sid
  stage: test
  needs:
    - job: sid
      artifacts: true
  before_script:
    - !reference [.apt-init]
  script:
    - scripts/provision-packaging-debian
    - piuparts dist/onionprobe_*.deb
  #only:
  #  - main

#
# Configuration
#

configs:
  image: containers.torproject.org/tpo/tpa/base-images/debian:stable
  stage: build
  before_script:
    - !reference [.apt-init]
  script:
    - apt-get update
    - apt-get install -y git
    - git submodule sync
    - git submodule update --init --recursive --depth 1
    - scripts/provision-onionprobe
    - make configs
    - mkdir -p dist
    - cp configs/*.yaml dist
  artifacts:
    paths:
      - dist
  #only:
  #  - main

#
# Documentation
#

#manpage:
#  image: containers.torproject.org/tpo/tpa/base-images/debian:stable
#  stage: build
#  before_script:
#    - !reference [.apt-init]
#  script:
#    - apt-get update
#    - apt-get install -y git
#    - git submodule sync
#    - git submodule update --init --recursive --depth 1
#    - scripts/provision-onionprobe
#    - make manpage
#    - mkdir -p dist
#    - cp docs/man/onionprobe.1.md dist
#  artifacts:
#    paths:
#      - dist
#  only:
#    - main

#
# Prometheus
# Thanks https://gitlab.torproject.org/tpo/tpa/prometheus-alerts
#

pint:
  stage: test
  image: ghcr.io/cloudflare/pint
  script:
    - pint lint configs/prometheus/*rules*

promtool:
  stage: test
  image:
    name: quay.io/prometheus/prometheus
    entrypoint: [""]
  script:
    - promtool check config configs/prometheus/prometheus.yml
    - promtool test rules configs/prometheus/test.yml

#
# Release
#

release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: .post
  rules:
    # Run this job when a tag is created
    - if: $CI_COMMIT_TAG
  script:
    - echo "Running release_job..."
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
